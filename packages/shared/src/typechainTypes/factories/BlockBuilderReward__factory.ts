/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  BlockBuilderReward,
  BlockBuilderRewardInterface,
} from "../BlockBuilderReward";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "allowClaim",
    inputs: [
      {
        name: "periodNumber",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "alreadySetReward",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claimAllowed",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claimReward",
    inputs: [
      {
        name: "periodNumber",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimed",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_contribution",
        type: "address",
        internalType: "address",
      },
      {
        name: "_intmaxToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setReward",
    inputs: [
      {
        name: "periodNumber",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "totalRewards",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "Claimed",
    inputs: [
      {
        name: "periodNumber",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetReward",
    inputs: [
      {
        name: "periodNumber",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AddressZero",
    inputs: [],
  },
  {
    type: "error",
    name: "AlreadyClaimed",
    inputs: [],
  },
  {
    type: "error",
    name: "ClaimAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "ClaimNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "NotSetReward",
    inputs: [
      {
        name: "periodNumber",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "PeriodNotEnded",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff16815250348015610042575f5ffd5b5061005161005660201b60201c565b6101b6565b5f61006561015460201b60201c565b9050805f0160089054906101000a900460ff16156100af576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff8016815f015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff16146101515767ffffffffffffffff815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051610148919061019d565b60405180910390a15b50565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f67ffffffffffffffff82169050919050565b6101978161017b565b82525050565b5f6020820190506101b05f83018461018e565b92915050565b608051611e006101dc5f395f8181610e3a01528181610e8f01526110490152611e005ff3fe6080604052600436106100dc575f3560e01c8063715018a61161007e578063a47bd49611610058578063a47bd496146102a6578063ad3cb1cc146102ce578063ae169a50146102f8578063f2fde38b14610320576100dc565b8063715018a61461023e578063762789a8146102545780638da5cb5b1461027c576100dc565b8063485cc955116100ba578063485cc955146101945780634f1ef286146101bc57806352d1902d146101d857806356de7de114610202576100dc565b8063120aa877146100e057806332f266941461011c5780633477a90614610158575b5f5ffd5b3480156100eb575f5ffd5b50610106600480360381019061010191906116f1565b610348565b6040516101139190611749565b60405180910390f35b348015610127575f5ffd5b50610142600480360381019061013d9190611762565b610372565b60405161014f919061179c565b60405180910390f35b348015610163575f5ffd5b5061017e60048036038101906101799190611762565b610387565b60405161018b9190611749565b60405180910390f35b34801561019f575f5ffd5b506101ba60048036038101906101b591906117b5565b6103a4565b005b6101d660048036038101906101d1919061192f565b610650565b005b3480156101e3575f5ffd5b506101ec61066f565b6040516101f991906119a1565b60405180910390f35b34801561020d575f5ffd5b5061022860048036038101906102239190611762565b6106a0565b6040516102359190611749565b60405180910390f35b348015610249575f5ffd5b506102526106bd565b005b34801561025f575f5ffd5b5061027a60048036038101906102759190611762565b6106d0565b005b348015610287575f5ffd5b50610290610763565b60405161029d91906119c9565b60405180910390f35b3480156102b1575f5ffd5b506102cc60048036038101906102c791906119e2565b610798565b005b3480156102d9575f5ffd5b506102e2610870565b6040516102ef9190611a80565b60405180910390f35b348015610303575f5ffd5b5061031e60048036038101906103199190611762565b6108a9565b005b34801561032b575f5ffd5b5061034660048036038101906103419190611aa0565b610d68565b005b6005602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b6002602052805f5260405f205f915090505481565b6004602052805f5260405f205f915054906101000a900460ff1681565b5f6103ad610dec565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff161480156103f55750825b90505f60018367ffffffffffffffff1614801561042857505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610436575080155b1561046d576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156104ba576001855f0160086101000a81548160ff0219169083151502179055505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16148061051f57505f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16145b15610556576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610566610561610e13565b610e1a565b61056e610e2e565b865f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610647575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161063e9190611b20565b60405180910390a15b50505050505050565b610658610e38565b61066182610f1e565b61066b8282610f29565b5050565b5f610678611047565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b6003602052805f5260405f205f915054906101000a900460ff1681565b6106c56110ce565b6106ce5f611155565b565b6106d86110ce565b60045f8281526020019081526020015f205f9054906101000a900460ff1661073757806040517fadd79dbb00000000000000000000000000000000000000000000000000000000815260040161072e919061179c565b60405180910390fd5b600160035f8381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f5f61076d611226565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6107a06110ce565b60035f8381526020019081526020015f205f9054906101000a900460ff16156107f5576040517f641de5fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060025f8481526020019081526020015f2081905550600160045f8481526020019081526020015f205f6101000a81548160ff021916908315150217905550817ff0ce7aa5ba2b3ac54f08032f04953c5d57c298b78460dd948bf0211bb0a8587182604051610864919061179c565b60405180910390a25050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b805f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663086146d26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610913573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109379190611b4d565b1161096e576040517fac59a02d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60035f8281526020019081526020015f205f9054906101000a900460ff166109c2576040517f9a0c721c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055f8281526020019081526020015f205f6109dc610e13565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610a59576040517f646cf55800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160055f8381526020019081526020015f205f610a75610e13565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c962d9d837f86b9f03d796881acc3ae8b638c23861904ac9c358da18e1d9994e3874f61c12d6040518363ffffffff1660e01b8152600401610b40929190611b78565b602060405180830381865afa158015610b5b573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b7f9190611b4d565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636513f7ab847f86b9f03d796881acc3ae8b638c23861904ac9c358da18e1d9994e3874f61c12d610be5610e13565b6040518463ffffffff1660e01b8152600401610c0393929190611b9f565b602060405180830381865afa158015610c1e573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c429190611b4d565b60025f8581526020019081526020015f2054610c5e9190611c01565b610c689190611c6f565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610caf610e13565b836040518363ffffffff1660e01b8152600401610ccd929190611c9f565b6020604051808303815f875af1158015610ce9573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0d9190611cf0565b50610d16610e13565b73ffffffffffffffffffffffffffffffffffffffff16827f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed02683604051610d5c919061179c565b60405180910390a35050565b610d706110ce565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610de0575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610dd791906119c9565b60405180910390fd5b610de981611155565b50565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f33905090565b610e2261124d565b610e2b8161128d565b50565b610e3661124d565b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480610ee557507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610ecc611311565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610f1c576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610f266110ce565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610f9157506040513d601f19601f82011682018060405250810190610f8e9190611d45565b60015b610fd257816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610fc991906119c9565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b811461103857806040517faa1d49a400000000000000000000000000000000000000000000000000000000815260040161102f91906119a1565b60405180910390fd5b6110428383611364565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146110cc576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6110d6610e13565b73ffffffffffffffffffffffffffffffffffffffff166110f4610763565b73ffffffffffffffffffffffffffffffffffffffff161461115357611117610e13565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161114a91906119c9565b60405180910390fd5b565b5f61115e611226565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b6112556113d6565b61128b576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61129561124d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611305575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016112fc91906119c9565b60405180910390fd5b61130e81611155565b50565b5f61133d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6113f4565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61136d826113fd565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f815111156113c9576113c382826114c6565b506113d2565b6113d1611546565b5b5050565b5f6113df610dec565b5f0160089054906101000a900460ff16905090565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361145857806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161144f91906119c9565b60405180910390fd5b806114847f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6113f4565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f5f8473ffffffffffffffffffffffffffffffffffffffff16846040516114ef9190611db4565b5f60405180830381855af49150503d805f8114611527576040519150601f19603f3d011682016040523d82523d5f602084013e61152c565b606091505b509150915061153c858383611582565b9250505092915050565b5f341115611580576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b606082611597576115928261160f565b611607565b5f82511480156115bd57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156115ff57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016115f691906119c9565b60405180910390fd5b819050611608565b5b9392505050565b5f815111156116215780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f5ffd5b5f5ffd5b5f819050919050565b61167681611664565b8114611680575f5ffd5b50565b5f813590506116918161166d565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6116c082611697565b9050919050565b6116d0816116b6565b81146116da575f5ffd5b50565b5f813590506116eb816116c7565b92915050565b5f5f604083850312156117075761170661165c565b5b5f61171485828601611683565b9250506020611725858286016116dd565b9150509250929050565b5f8115159050919050565b6117438161172f565b82525050565b5f60208201905061175c5f83018461173a565b92915050565b5f602082840312156117775761177661165c565b5b5f61178484828501611683565b91505092915050565b61179681611664565b82525050565b5f6020820190506117af5f83018461178d565b92915050565b5f5f604083850312156117cb576117ca61165c565b5b5f6117d8858286016116dd565b92505060206117e9858286016116dd565b9150509250929050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611841826117fb565b810181811067ffffffffffffffff821117156118605761185f61180b565b5b80604052505050565b5f611872611653565b905061187e8282611838565b919050565b5f67ffffffffffffffff82111561189d5761189c61180b565b5b6118a6826117fb565b9050602081019050919050565b828183375f83830152505050565b5f6118d36118ce84611883565b611869565b9050828152602081018484840111156118ef576118ee6117f7565b5b6118fa8482856118b3565b509392505050565b5f82601f830112611916576119156117f3565b5b81356119268482602086016118c1565b91505092915050565b5f5f604083850312156119455761194461165c565b5b5f611952858286016116dd565b925050602083013567ffffffffffffffff81111561197357611972611660565b5b61197f85828601611902565b9150509250929050565b5f819050919050565b61199b81611989565b82525050565b5f6020820190506119b45f830184611992565b92915050565b6119c3816116b6565b82525050565b5f6020820190506119dc5f8301846119ba565b92915050565b5f5f604083850312156119f8576119f761165c565b5b5f611a0585828601611683565b9250506020611a1685828601611683565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f611a5282611a20565b611a5c8185611a2a565b9350611a6c818560208601611a3a565b611a75816117fb565b840191505092915050565b5f6020820190508181035f830152611a988184611a48565b905092915050565b5f60208284031215611ab557611ab461165c565b5b5f611ac2848285016116dd565b91505092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f611b0a611b05611b0084611acb565b611ae7565b611ad4565b9050919050565b611b1a81611af0565b82525050565b5f602082019050611b335f830184611b11565b92915050565b5f81519050611b478161166d565b92915050565b5f60208284031215611b6257611b6161165c565b5b5f611b6f84828501611b39565b91505092915050565b5f604082019050611b8b5f83018561178d565b611b986020830184611992565b9392505050565b5f606082019050611bb25f83018661178d565b611bbf6020830185611992565b611bcc60408301846119ba565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c0b82611664565b9150611c1683611664565b9250828202611c2481611664565b91508282048414831517611c3b57611c3a611bd4565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611c7982611664565b9150611c8483611664565b925082611c9457611c93611c42565b5b828204905092915050565b5f604082019050611cb25f8301856119ba565b611cbf602083018461178d565b9392505050565b611ccf8161172f565b8114611cd9575f5ffd5b50565b5f81519050611cea81611cc6565b92915050565b5f60208284031215611d0557611d0461165c565b5b5f611d1284828501611cdc565b91505092915050565b611d2481611989565b8114611d2e575f5ffd5b50565b5f81519050611d3f81611d1b565b92915050565b5f60208284031215611d5a57611d5961165c565b5b5f611d6784828501611d31565b91505092915050565b5f81519050919050565b5f81905092915050565b5f611d8e82611d70565b611d988185611d7a565b9350611da8818560208601611a3a565b80840191505092915050565b5f611dbf8284611d84565b91508190509291505056fea264697066735822122043fb0c5cb6ace26390ec86d5665079a8e9b61dea09afb8026dcf7930a304e0ee64736f6c634300081b0033";

type BlockBuilderRewardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockBuilderRewardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockBuilderReward__factory extends ContractFactory {
  constructor(...args: BlockBuilderRewardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BlockBuilderReward & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockBuilderReward__factory {
    return super.connect(runner) as BlockBuilderReward__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockBuilderRewardInterface {
    return new Interface(_abi) as BlockBuilderRewardInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BlockBuilderReward {
    return new Contract(address, _abi, runner) as unknown as BlockBuilderReward;
  }
}
