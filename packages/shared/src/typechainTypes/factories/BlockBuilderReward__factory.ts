/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  BlockBuilderReward,
  BlockBuilderRewardInterface,
} from "../BlockBuilderReward";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claimReward",
    inputs: [
      {
        name: "periodNumber",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimed",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "contribution",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IContribution",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getClaimableReward",
    inputs: [
      {
        name: "periodNumber",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_contribution",
        type: "address",
        internalType: "address",
      },
      {
        name: "_intmaxToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "intmaxToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setReward",
    inputs: [
      {
        name: "periodNumber",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "totalRewards",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "isSet",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "amount",
        type: "uint248",
        internalType: "uint248",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "Claimed",
    inputs: [
      {
        name: "periodNumber",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetReward",
    inputs: [
      {
        name: "periodNumber",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AddressZero",
    inputs: [],
  },
  {
    type: "error",
    name: "AlreadyClaimed",
    inputs: [],
  },
  {
    type: "error",
    name: "AlreadySetReward",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "NotSetReward",
    inputs: [
      {
        name: "periodNumber",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "PeriodNotEnded",
    inputs: [],
  },
  {
    type: "error",
    name: "RewardTooLarge",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff16815250348015610042575f5ffd5b5061005161005660201b60201c565b6101b6565b5f61006561015460201b60201c565b9050805f0160089054906101000a900460ff16156100af576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff8016815f015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff16146101515767ffffffffffffffff815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051610148919061019d565b60405180910390a15b50565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f67ffffffffffffffff82169050919050565b6101978161017b565b82525050565b5f6020820190506101b05f83018461018e565b92915050565b6080516124686101dc5f395f818161139e015281816113f301526115ad01526124685ff3fe6080604052600436106100dc575f3560e01c80638da5cb5b1161007e578063ad3cb1cc11610058578063ad3cb1cc14610295578063ad8d2807146102bf578063ae169a50146102e9578063f2fde38b14610311576100dc565b80638da5cb5b14610207578063a47bd49614610231578063ab3b55e314610259576100dc565b80634f1ef286116100ba5780634f1ef2861461018157806350520b1f1461019d57806352d1902d146101c7578063715018a6146101f1576100dc565b8063120aa877146100e057806332f266941461011c578063485cc95514610159575b5f5ffd5b3480156100eb575f5ffd5b5061010660048036038101906101019190611c55565b610339565b6040516101139190611cad565b60405180910390f35b348015610127575f5ffd5b50610142600480360381019061013d9190611cc6565b610363565b604051610150929190611d2a565b60405180910390f35b348015610164575f5ffd5b5061017f600480360381019061017a9190611d51565b6103b9565b005b61019b60048036038101906101969190611ecb565b610665565b005b3480156101a8575f5ffd5b506101b1610684565b6040516101be9190611f80565b60405180910390f35b3480156101d2575f5ffd5b506101db6106a8565b6040516101e89190611fb1565b60405180910390f35b3480156101fc575f5ffd5b506102056106d9565b005b348015610212575f5ffd5b5061021b6106ec565b6040516102289190611fd9565b60405180910390f35b34801561023c575f5ffd5b5061025760048036038101906102529190611ff2565b610721565b005b348015610264575f5ffd5b5061027f600480360381019061027a9190611c55565b610974565b60405161028c919061203f565b60405180910390f35b3480156102a0575f5ffd5b506102a9610cf6565b6040516102b691906120b8565b60405180910390f35b3480156102ca575f5ffd5b506102d3610d2f565b6040516102e091906120f8565b60405180910390f35b3480156102f4575f5ffd5b5061030f600480360381019061030a9190611cc6565b610d54565b005b34801561031c575f5ffd5b5061033760048036038101906103329190612111565b6112cc565b005b6003602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b6002602052805f5260405f205f91509050805f015f9054906101000a900460ff1690805f0160019054906101000a90047effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16905082565b5f6103c2611350565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff1614801561040a5750825b90505f60018367ffffffffffffffff1614801561043d57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561044b575080155b15610482576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156104cf576001855f0160086101000a81548160ff0219169083151502179055505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16148061053457505f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16145b1561056b576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61057b610576611377565b61137e565b610583611392565b865f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550831561065c575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516106539190612188565b60405180910390a15b50505050505050565b61066d61139c565b61067682611482565b610680828261148d565b5050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6106b16115ab565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b6106e1611632565b6106ea5f6116b9565b565b5f5f6106f661178a565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b610729611632565b5f819050807effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff168214610787576040517f71009bf700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60025f8581526020019081526020015f206040518060400160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a90047effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250509050805f015115610870576040517fdf54677000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060400160405280600115158152602001837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525060025f8681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083151502179055506020820151815f0160016101000a8154817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550905050837ff0ce7aa5ba2b3ac54f08032f04953c5d57c298b78460dd948bf0211bb0a8587184604051610966919061203f565b60405180910390a250505050565b5f825f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663086146d26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109df573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a0391906121b5565b11610a10575f9050610cf0565b5f60025f8581526020019081526020015f206040518060400160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a90047effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250509050805f0151610acf575f915050610cf0565b5f81602001517effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16905060035f8681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610b60575f92505050610cf0565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c962d9d867f86b9f03d796881acc3ae8b638c23861904ac9c358da18e1d9994e3874f61c12d6040518363ffffffff1660e01b8152600401610bdb9291906121e0565b602060405180830381865afa158015610bf6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c1a91906121b5565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636513f7ab877f86b9f03d796881acc3ae8b638c23861904ac9c358da18e1d9994e3874f61c12d886040518463ffffffff1660e01b8152600401610c9793929190612207565b602060405180830381865afa158015610cb2573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cd691906121b5565b82610ce19190612269565b610ceb91906122d7565b925050505b92915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b805f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663086146d26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dbe573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610de291906121b5565b11610e19576040517fac59a02d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60025f8381526020019081526020015f206040518060400160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a90047effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250509050805f0151610f0c57816040517fadd79dbb000000000000000000000000000000000000000000000000000000008152600401610f03919061203f565b60405180910390fd5b5f81602001517effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16905060035f8481526020019081526020015f205f610f4f611377565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610fcc576040517f646cf55800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160035f8581526020019081526020015f205f610fe8611377565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c962d9d857f86b9f03d796881acc3ae8b638c23861904ac9c358da18e1d9994e3874f61c12d6040518363ffffffff1660e01b81526004016110b39291906121e0565b602060405180830381865afa1580156110ce573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110f291906121b5565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636513f7ab867f86b9f03d796881acc3ae8b638c23861904ac9c358da18e1d9994e3874f61c12d611158611377565b6040518463ffffffff1660e01b815260040161117693929190612207565b602060405180830381865afa158015611191573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111b591906121b5565b836111c09190612269565b6111ca91906122d7565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb611211611377565b836040518363ffffffff1660e01b815260040161122f929190612307565b6020604051808303815f875af115801561124b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061126f9190612358565b50611278611377565b73ffffffffffffffffffffffffffffffffffffffff16847f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed026836040516112be919061203f565b60405180910390a350505050565b6112d4611632565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611344575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161133b9190611fd9565b60405180910390fd5b61134d816116b9565b50565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f33905090565b6113866117b1565b61138f816117f1565b50565b61139a6117b1565b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061144957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611430611875565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611480576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61148a611632565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156114f557506040513d601f19601f820116820180604052508101906114f291906123ad565b60015b61153657816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161152d9190611fd9565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b811461159c57806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016115939190611fb1565b60405180910390fd5b6115a683836118c8565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611630576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61163a611377565b73ffffffffffffffffffffffffffffffffffffffff166116586106ec565b73ffffffffffffffffffffffffffffffffffffffff16146116b75761167b611377565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016116ae9190611fd9565b60405180910390fd5b565b5f6116c261178a565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b6117b961193a565b6117ef576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6117f96117b1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611869575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016118609190611fd9565b60405180910390fd5b611872816116b9565b50565b5f6118a17f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611958565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6118d182611961565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f8151111561192d576119278282611a2a565b50611936565b611935611aaa565b5b5050565b5f611943611350565b5f0160089054906101000a900460ff16905090565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b036119bc57806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016119b39190611fd9565b60405180910390fd5b806119e87f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611958565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f5f8473ffffffffffffffffffffffffffffffffffffffff1684604051611a53919061241c565b5f60405180830381855af49150503d805f8114611a8b576040519150601f19603f3d011682016040523d82523d5f602084013e611a90565b606091505b5091509150611aa0858383611ae6565b9250505092915050565b5f341115611ae4576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b606082611afb57611af682611b73565b611b6b565b5f8251148015611b2157505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611b6357836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611b5a9190611fd9565b60405180910390fd5b819050611b6c565b5b9392505050565b5f81511115611b855780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f5ffd5b5f5ffd5b5f819050919050565b611bda81611bc8565b8114611be4575f5ffd5b50565b5f81359050611bf581611bd1565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c2482611bfb565b9050919050565b611c3481611c1a565b8114611c3e575f5ffd5b50565b5f81359050611c4f81611c2b565b92915050565b5f5f60408385031215611c6b57611c6a611bc0565b5b5f611c7885828601611be7565b9250506020611c8985828601611c41565b9150509250929050565b5f8115159050919050565b611ca781611c93565b82525050565b5f602082019050611cc05f830184611c9e565b92915050565b5f60208284031215611cdb57611cda611bc0565b5b5f611ce884828501611be7565b91505092915050565b5f7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b611d2481611cf1565b82525050565b5f604082019050611d3d5f830185611c9e565b611d4a6020830184611d1b565b9392505050565b5f5f60408385031215611d6757611d66611bc0565b5b5f611d7485828601611c41565b9250506020611d8585828601611c41565b9150509250929050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611ddd82611d97565b810181811067ffffffffffffffff82111715611dfc57611dfb611da7565b5b80604052505050565b5f611e0e611bb7565b9050611e1a8282611dd4565b919050565b5f67ffffffffffffffff821115611e3957611e38611da7565b5b611e4282611d97565b9050602081019050919050565b828183375f83830152505050565b5f611e6f611e6a84611e1f565b611e05565b905082815260208101848484011115611e8b57611e8a611d93565b5b611e96848285611e4f565b509392505050565b5f82601f830112611eb257611eb1611d8f565b5b8135611ec2848260208601611e5d565b91505092915050565b5f5f60408385031215611ee157611ee0611bc0565b5b5f611eee85828601611c41565b925050602083013567ffffffffffffffff811115611f0f57611f0e611bc4565b5b611f1b85828601611e9e565b9150509250929050565b5f819050919050565b5f611f48611f43611f3e84611bfb565b611f25565b611bfb565b9050919050565b5f611f5982611f2e565b9050919050565b5f611f6a82611f4f565b9050919050565b611f7a81611f60565b82525050565b5f602082019050611f935f830184611f71565b92915050565b5f819050919050565b611fab81611f99565b82525050565b5f602082019050611fc45f830184611fa2565b92915050565b611fd381611c1a565b82525050565b5f602082019050611fec5f830184611fca565b92915050565b5f5f6040838503121561200857612007611bc0565b5b5f61201585828601611be7565b925050602061202685828601611be7565b9150509250929050565b61203981611bc8565b82525050565b5f6020820190506120525f830184612030565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f61208a82612058565b6120948185612062565b93506120a4818560208601612072565b6120ad81611d97565b840191505092915050565b5f6020820190508181035f8301526120d08184612080565b905092915050565b5f6120e282611f4f565b9050919050565b6120f2816120d8565b82525050565b5f60208201905061210b5f8301846120e9565b92915050565b5f6020828403121561212657612125611bc0565b5b5f61213384828501611c41565b91505092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f61217261216d6121688461213c565b611f25565b612145565b9050919050565b61218281612158565b82525050565b5f60208201905061219b5f830184612179565b92915050565b5f815190506121af81611bd1565b92915050565b5f602082840312156121ca576121c9611bc0565b5b5f6121d7848285016121a1565b91505092915050565b5f6040820190506121f35f830185612030565b6122006020830184611fa2565b9392505050565b5f60608201905061221a5f830186612030565b6122276020830185611fa2565b6122346040830184611fca565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61227382611bc8565b915061227e83611bc8565b925082820261228c81611bc8565b915082820484148315176122a3576122a261223c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6122e182611bc8565b91506122ec83611bc8565b9250826122fc576122fb6122aa565b5b828204905092915050565b5f60408201905061231a5f830185611fca565b6123276020830184612030565b9392505050565b61233781611c93565b8114612341575f5ffd5b50565b5f815190506123528161232e565b92915050565b5f6020828403121561236d5761236c611bc0565b5b5f61237a84828501612344565b91505092915050565b61238c81611f99565b8114612396575f5ffd5b50565b5f815190506123a781612383565b92915050565b5f602082840312156123c2576123c1611bc0565b5b5f6123cf84828501612399565b91505092915050565b5f81519050919050565b5f81905092915050565b5f6123f6826123d8565b61240081856123e2565b9350612410818560208601612072565b80840191505092915050565b5f61242782846123ec565b91508190509291505056fea2646970667358221220ad4653f434a69fcd4f6784cdb8a18edbbec9548f8995162fcabb90d9c8b1cafa64736f6c634300081b0033";

type BlockBuilderRewardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockBuilderRewardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockBuilderReward__factory extends ContractFactory {
  constructor(...args: BlockBuilderRewardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BlockBuilderReward & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockBuilderReward__factory {
    return super.connect(runner) as BlockBuilderReward__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockBuilderRewardInterface {
    return new Interface(_abi) as BlockBuilderRewardInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BlockBuilderReward {
    return new Contract(address, _abi, runner) as unknown as BlockBuilderReward;
  }
}
