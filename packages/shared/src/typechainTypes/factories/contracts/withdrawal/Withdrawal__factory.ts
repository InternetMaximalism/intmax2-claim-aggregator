/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { ContractDeployTransaction, ContractRunner, Signer } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Withdrawal, WithdrawalInterface } from "../../../contracts/withdrawal/Withdrawal";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "AddressZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
    ],
    name: "BlockHashNotExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenIndice",
        type: "uint256",
      },
    ],
    name: "TokenAlreadyExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenIndice",
        type: "uint256",
      },
    ],
    name: "TokenNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalAggregatorMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalChainVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalProofVerificationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "withdrawalHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct WithdrawalLib.Withdrawal",
        name: "withdrawal",
        type: "tuple",
      },
    ],
    name: "ClaimableWithdrawalQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "withdrawalHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct WithdrawalLib.Withdrawal",
        name: "withdrawal",
        type: "tuple",
      },
    ],
    name: "DirectWithdrawalQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIndices",
        type: "uint256[]",
      },
    ],
    name: "DirectWithdrawalTokenIndicesAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIndices",
        type: "uint256[]",
      },
    ],
    name: "DirectWithdrawalTokenIndicesRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIndices",
        type: "uint256[]",
      },
    ],
    name: "addDirectWithdrawalTokenIndices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDirectWithdrawalTokenIndices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_scrollMessenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_withdrawalVerifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liquidity",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rollup",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contribution",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_directWithdrawalTokenIndices",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIndices",
        type: "uint256[]",
      },
    ],
    name: "removeDirectWithdrawalTokenIndices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "blockNumber",
            type: "uint32",
          },
        ],
        internalType: "struct ChainedWithdrawalLib.ChainedWithdrawal[]",
        name: "withdrawals",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "lastWithdrawalHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "withdrawalAggregator",
            type: "address",
          },
        ],
        internalType: "struct WithdrawalProofPublicInputsLib.WithdrawalProofPublicInputs",
        name: "publicInputs",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "submitWithdrawalProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b5061005261005760201b60201c565b6101c1565b600061006761015b60201b60201c565b90508060000160089054906101000a900460ff16156100b2576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16146101585767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff60405161014f91906101a6565b60405180910390a15b50565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600067ffffffffffffffff82169050919050565b6101a081610183565b82525050565b60006020820190506101bb6000830184610197565b92915050565b6080516135176101ea600039600081816110ae0152818161110301526112be01526135176000f3fe60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b146101515780639a0002a91461017c578063a7178c37146101a5578063a93e83a6146101d0578063ad3cb1cc146101f9578063f2fde38b146102245761009c565b80634f1ef286146100a157806352d1902d146100bd578063715018a6146100e857806377e88d2c146100ff578063871c5fe714610128575b600080fd5b6100bb60048036038101906100b6919061239c565b61024d565b005b3480156100c957600080fd5b506100d261026c565b6040516100df9190612411565b60405180910390f35b3480156100f457600080fd5b506100fd61029f565b005b34801561010b57600080fd5b506101266004803603810190610121919061252a565b6102b3565b005b34801561013457600080fd5b5061014f600480360381019061014a9190612643565b610801565b005b34801561015d57600080fd5b50610166610857565b604051610173919061269f565b60405180910390f35b34801561018857600080fd5b506101a3600480360381019061019e9190612643565b61088f565b005b3480156101b157600080fd5b506101ba61097d565b6040516101c79190612778565b60405180910390f35b3480156101dc57600080fd5b506101f760048036038101906101f2919061286a565b61098e565b005b34801561020557600080fd5b5061020e610fed565b60405161021b919061297e565b60405180910390f35b34801561023057600080fd5b5061024b600480360381019061024691906129a0565b611026565b005b6102556110ac565b61025e82611192565b610268828261119d565b5050565b60006102766112bc565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b6102a7611343565b6102b160006113ca565b565b60006102bd6114a1565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561030b5750825b9050600060018367ffffffffffffffff16148015610340575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561034e575080155b15610385576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156103d55760018560000160086101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff160361043b576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16036104a1576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1603610507576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff160361056d576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16036105d3576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610639576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106428c6114c9565b61064a6114dd565b8a600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550896000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555088600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610797866114e7565b83156107f35760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516107ea9190612a26565b60405180910390a15b505050505050505050505050565b610809611343565b610853828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506114e7565b5050565b6000806108626115ca565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b610897611343565b60005b8282905081101561093f5760006108d48484848181106108bd576108bc612a41565b5b9050602002013560066115f290919063ffffffff16565b905080610931578383838181106108ee576108ed612a41565b5b905060200201356040517f2a2c67cd0000000000000000000000000000000000000000000000000000000081526004016109289190612a7f565b60405180910390fd5b50808060010191505061089a565b507f0e5fb72f67c09578724f25132b948e5fb901741fa3240f11804518dc94799a2b8282604051610971929190612b04565b60405180910390a15050565b6060610989600661160c565b905090565b61099b858585858561162d565b60008060008787905067ffffffffffffffff8111156109bd576109bc612271565b5b6040519080825280602002602001820160405280156109eb5781602001602082028036833780820191505090505b50905060005b88889050811015610be4576000898983818110610a1157610a10612a41565b5b905060c00201803603810190610a279190612c35565b9050600560008260600151815260200190815260200160002060009054906101000a900460ff1615610a80576001838381518110610a6857610a67612a41565b5b60200260200101901515908115158152505050610bd7565b6001600560008360600151815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d2b210a18360a001516040518263ffffffff1660e01b8152600401610b119190612c71565b602060405180830381865afa158015610b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b529190612ca1565b905081608001518114610ba05781608001516040517f631b89b0000000000000000000000000000000000000000000000000000000008152600401610b979190612411565b60405180910390fd5b610bad8260200151611849565b15610bc5578580610bbd90612cfd565b965050610bd4565b8480610bd090612cfd565b9550505b50505b80806001019150506109f1565b50600083148015610bf55750600082145b15610c0257505050610fe6565b60008367ffffffffffffffff811115610c1e57610c1d612271565b5b604051908082528060200260200182016040528015610c5757816020015b610c4461219d565b815260200190600190039081610c3c5790505b50905060008367ffffffffffffffff811115610c7657610c75612271565b5b604051908082528060200260200182016040528015610ca45781602001602082028036833780820191505090505b50905060008060005b8c8c9050811015610e9457858181518110610ccb57610cca612a41565b5b6020026020010151610e875760008d8d83818110610cec57610ceb612a41565b5b905060c00201803603810190610d029190612c35565b905060006040518060800160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015163ffffffff1681526020018360400151815260200183606001518152509050610d628260200151611849565b15610df45780878681518110610d7b57610d7a612a41565b5b6020026020010181905250806000015173ffffffffffffffffffffffffffffffffffffffff16610daa8261186c565b7fdbe674c66915823ad8cb90cac7eb482e951adec0311c9cf091da19de527ee93583604051610dd99190612dc7565b60405180910390a38480610dec90612cfd565b955050610e84565b6000610dff8261186c565b905080878681518110610e1557610e14612a41565b5b602002602001018181525050816000015173ffffffffffffffffffffffffffffffffffffffff16817f740137a4fd93de42bb435842325e4fad55ea4ba617db0b44125377b94b43249d84604051610e6c9190612dc7565b60405180910390a38480610e7f90612cfd565b955050505b50505b8080600101915050610cad565b506000639d6a54cb60e01b8585604051602401610eb2929190612f95565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050610f1a816118b2565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f099f9f57f738128fe393bef1bcd8a524796fff40618b938cd467c71fcf37850ab0ba4f7d7610f8161199c565b8a8c610f8d9190612fcc565b6040518463ffffffff1660e01b8152600401610fab93929190613000565b600060405180830381600087803b158015610fc557600080fd5b505af1158015610fd9573d6000803e3d6000fd5b5050505050505050505050505b5050505050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b61102e611343565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110a05760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611097919061269f565b60405180910390fd5b6110a9816113ca565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061115957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166111406119a4565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611190576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61119a611343565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561120557506040513d601f19601f820116820180604052508101906112029190612ca1565b60015b61124657816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161123d919061269f565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146112ad57806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016112a49190612411565b60405180910390fd5b6112b783836119fb565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611341576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61134b61199c565b73ffffffffffffffffffffffffffffffffffffffff16611369610857565b73ffffffffffffffffffffffffffffffffffffffff16146113c85761138c61199c565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113bf919061269f565b60405180910390fd5b565b60006113d46115ca565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6114d1611a6e565b6114da81611aae565b50565b6114e5611a6e565b565b60005b815181101561158f57600061152383838151811061150b5761150a612a41565b5b60200260200101516006611b3490919063ffffffff16565b9050806115815782828151811061153d5761153c612a41565b5b60200260200101516040517fd1d533d80000000000000000000000000000000000000000000000000000000081526004016115789190612a7f565b60405180910390fd5b5080806001019150506114ea565b507f03e4a91d34a2a2419d5513d9814cf5ea9e317e6166670b4b89a97e478541d4b9816040516115bf9190612778565b60405180910390a150565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b6000611604836000018360001b611b4e565b905092915050565b6060600061161c83600001611c62565b905060608190508092505050919050565b61169a83600001358686808060200260200160405190810160405280939291908181526020016000905b8282101561168757848483905060c002018036038101906116789190612c35565b81526020019060010190611657565b5050505050611cbe90919063ffffffff16565b6116d0576040517ffbf63aef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116d861199c565b73ffffffffffffffffffffffffffffffffffffffff1683602001602081019061170191906129a0565b73ffffffffffffffffffffffffffffffffffffffff161461174e576040517fbe8e6d9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4f7a8a83836117ad6117a8888036038101906117a39190613087565b611d2a565b611d64565b6040518463ffffffff1660e01b81526004016117cb939291906130f2565b602060405180830381865afa1580156117e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180c9190613163565b611842576040517f38a3efc400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b60006118658263ffffffff166006611e0f90919063ffffffff16565b9050919050565b600081600001518260200151836040015184606001516040516020016118959493929190613250565b604051602081830303815290604052805190602001209050919050565b6000807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f7b157783600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685878661194561199c565b6040518763ffffffff1660e01b81526004016119659594939291906132e2565b6000604051808303818588803b15801561197e57600080fd5b505af1158015611992573d6000803e3d6000fd5b5050505050505050565b600033905090565b60006119d27f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611e29565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611a0482611e33565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115611a6157611a5b8282611f00565b50611a6a565b611a69611f84565b5b5050565b611a76611fc1565b611aac576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611ab6611a6e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611b285760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611b1f919061269f565b60405180910390fd5b611b31816113ca565b50565b6000611b46836000018360001b611fe1565b905092915050565b60008083600101600084815260200190815260200160002054905060008114611c56576000600182611b80919061333c565b9050600060018660000180549050611b98919061333c565b9050808214611c07576000866000018281548110611bb957611bb8612a41565b5b9060005260206000200154905080876000018481548110611bdd57611bdc612a41565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480611c1b57611c1a613370565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611c5c565b60009150505b92915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015611cb257602002820191906000526020600020905b815481526020019060010190808311611c9e575b50505050509050919050565b6000806000801b905060005b8451811015611d0c576000858281518110611ce857611ce7612a41565b5b60200260200101519050611cfc8184612051565b9250508080600101915050611cca565b50828114611d1e576000915050611d24565b60019150505b92915050565b600081600001518260200151604051602001611d4792919061339f565b604051602081830303815290604052805190602001209050919050565b60606000600867ffffffffffffffff811115611d8357611d82612271565b5b604051908082528060200260200182016040528015611db15781602001602082028036833780820191505090505b50905060005b6008811015611e0557602081611dcd91906133cb565b84901b60e01c63ffffffff16828281518110611dec57611deb612a41565b5b6020026020010181815250508080600101915050611db7565b5080915050919050565b6000611e21836000018360001b6120a6565b905092915050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03611e8f57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611e86919061269f565b60405180910390fd5b80611ebc7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611e29565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051611f2a9190613449565b600060405180830381855af49150503d8060008114611f65576040519150601f19603f3d011682016040523d82523d6000602084013e611f6a565b606091505b5091509150611f7a8583836120c9565b9250505092915050565b6000341115611fbf576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611fcb6114a1565b60000160089054906101000a900460ff16905090565b6000611fed83836120a6565b61204657826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061204b565b600090505b92915050565b600081836000015184602001518560400151866060015187608001518860a001516040516020016120889796959493929190613460565b60405160208183030381529060405280519060200120905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b6060826120de576120d982612158565b612150565b60008251148015612106575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561214857836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161213f919061269f565b60405180910390fd5b819050612151565b5b9392505050565b60008151111561216b5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff16815260200160008152602001600080191681525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612223826121f8565b9050919050565b61223381612218565b811461223e57600080fd5b50565b6000813590506122508161222a565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6122a982612260565b810181811067ffffffffffffffff821117156122c8576122c7612271565b5b80604052505050565b60006122db6121e4565b90506122e782826122a0565b919050565b600067ffffffffffffffff82111561230757612306612271565b5b61231082612260565b9050602081019050919050565b82818337600083830152505050565b600061233f61233a846122ec565b6122d1565b90508281526020810184848401111561235b5761235a61225b565b5b61236684828561231d565b509392505050565b600082601f83011261238357612382612256565b5b813561239384826020860161232c565b91505092915050565b600080604083850312156123b3576123b26121ee565b5b60006123c185828601612241565b925050602083013567ffffffffffffffff8111156123e2576123e16121f3565b5b6123ee8582860161236e565b9150509250929050565b6000819050919050565b61240b816123f8565b82525050565b60006020820190506124266000830184612402565b92915050565b600067ffffffffffffffff82111561244757612446612271565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6124708161245d565b811461247b57600080fd5b50565b60008135905061248d81612467565b92915050565b60006124a66124a18461242c565b6122d1565b905080838252602082019050602084028301858111156124c9576124c8612458565b5b835b818110156124f257806124de888261247e565b8452602084019350506020810190506124cb565b5050509392505050565b600082601f83011261251157612510612256565b5b8135612521848260208601612493565b91505092915050565b600080600080600080600060e0888a031215612549576125486121ee565b5b60006125578a828b01612241565b97505060206125688a828b01612241565b96505060406125798a828b01612241565b955050606061258a8a828b01612241565b945050608061259b8a828b01612241565b93505060a06125ac8a828b01612241565b92505060c088013567ffffffffffffffff8111156125cd576125cc6121f3565b5b6125d98a828b016124fc565b91505092959891949750929550565b600080fd5b60008083601f84011261260357612602612256565b5b8235905067ffffffffffffffff8111156126205761261f6125e8565b5b60208301915083602082028301111561263c5761263b612458565b5b9250929050565b6000806020838503121561265a576126596121ee565b5b600083013567ffffffffffffffff811115612678576126776121f3565b5b612684858286016125ed565b92509250509250929050565b61269981612218565b82525050565b60006020820190506126b46000830184612690565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6126ef8161245d565b82525050565b600061270183836126e6565b60208301905092915050565b6000602082019050919050565b6000612725826126ba565b61272f81856126c5565b935061273a836126d6565b8060005b8381101561276b57815161275288826126f5565b975061275d8361270d565b92505060018101905061273e565b5085935050505092915050565b60006020820190508181036000830152612792818461271a565b905092915050565b60008083601f8401126127b0576127af612256565b5b8235905067ffffffffffffffff8111156127cd576127cc6125e8565b5b6020830191508360c08202830111156127e9576127e8612458565b5b9250929050565b600080fd5b60006040828403121561280b5761280a6127f0565b5b81905092915050565b60008083601f84011261282a57612829612256565b5b8235905067ffffffffffffffff811115612847576128466125e8565b5b60208301915083600182028301111561286357612862612458565b5b9250929050565b600080600080600060808688031215612886576128856121ee565b5b600086013567ffffffffffffffff8111156128a4576128a36121f3565b5b6128b08882890161279a565b955095505060206128c3888289016127f5565b935050606086013567ffffffffffffffff8111156128e4576128e36121f3565b5b6128f088828901612814565b92509250509295509295909350565b600081519050919050565b600082825260208201905092915050565b60005b8381101561293957808201518184015260208101905061291e565b60008484015250505050565b6000612950826128ff565b61295a818561290a565b935061296a81856020860161291b565b61297381612260565b840191505092915050565b600060208201905081810360008301526129988184612945565b905092915050565b6000602082840312156129b6576129b56121ee565b5b60006129c484828501612241565b91505092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000612a10612a0b612a06846129cd565b6129eb565b6129d7565b9050919050565b612a20816129f5565b82525050565b6000602082019050612a3b6000830184612a17565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b612a798161245d565b82525050565b6000602082019050612a946000830184612a70565b92915050565b600080fd5b82818337505050565b6000612ab483856126c5565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115612ae757612ae6612a9a565b5b602083029250612af8838584612a9f565b82840190509392505050565b60006020820190508181036000830152612b1f818486612aa8565b90509392505050565b600080fd5b600063ffffffff82169050919050565b612b4681612b2d565b8114612b5157600080fd5b50565b600081359050612b6381612b3d565b92915050565b612b72816123f8565b8114612b7d57600080fd5b50565b600081359050612b8f81612b69565b92915050565b600060c08284031215612bab57612baa612b28565b5b612bb560c06122d1565b90506000612bc584828501612241565b6000830152506020612bd984828501612b54565b6020830152506040612bed8482850161247e565b6040830152506060612c0184828501612b80565b6060830152506080612c1584828501612b80565b60808301525060a0612c2984828501612b54565b60a08301525092915050565b600060c08284031215612c4b57612c4a6121ee565b5b6000612c5984828501612b95565b91505092915050565b612c6b81612b2d565b82525050565b6000602082019050612c866000830184612c62565b92915050565b600081519050612c9b81612b69565b92915050565b600060208284031215612cb757612cb66121ee565b5b6000612cc584828501612c8c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612d088261245d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d3a57612d39612cce565b5b600182019050919050565b612d4e81612218565b82525050565b612d5d81612b2d565b82525050565b612d6c816123f8565b82525050565b608082016000820151612d886000850182612d45565b506020820151612d9b6020850182612d54565b506040820151612dae60408501826126e6565b506060820151612dc16060850182612d63565b50505050565b6000608082019050612ddc6000830184612d72565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b608082016000820151612e246000850182612d45565b506020820151612e376020850182612d54565b506040820151612e4a60408501826126e6565b506060820151612e5d6060850182612d63565b50505050565b6000612e6f8383612e0e565b60808301905092915050565b6000602082019050919050565b6000612e9382612de2565b612e9d8185612ded565b9350612ea883612dfe565b8060005b83811015612ed9578151612ec08882612e63565b9750612ecb83612e7b565b925050600181019050612eac565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612f1e8383612d63565b60208301905092915050565b6000602082019050919050565b6000612f4282612ee6565b612f4c8185612ef1565b9350612f5783612f02565b8060005b83811015612f88578151612f6f8882612f12565b9750612f7a83612f2a565b925050600181019050612f5b565b5085935050505092915050565b60006040820190508181036000830152612faf8185612e88565b90508181036020830152612fc38184612f37565b90509392505050565b6000612fd78261245d565b9150612fe28361245d565b9250828201905080821115612ffa57612ff9612cce565b5b92915050565b60006060820190506130156000830186612402565b6130226020830185612690565b61302f6040830184612a70565b949350505050565b60006040828403121561304d5761304c612b28565b5b61305760406122d1565b9050600061306784828501612b80565b600083015250602061307b84828501612241565b60208301525092915050565b60006040828403121561309d5761309c6121ee565b5b60006130ab84828501613037565b91505092915050565b600082825260208201905092915050565b60006130d183856130b4565b93506130de83858461231d565b6130e783612260565b840190509392505050565b6000604082019050818103600083015261310d8185876130c5565b90508181036020830152613121818461271a565b9050949350505050565b60008115159050919050565b6131408161312b565b811461314b57600080fd5b50565b60008151905061315d81613137565b92915050565b600060208284031215613179576131786121ee565b5b60006131878482850161314e565b91505092915050565b60008160601b9050919050565b60006131a882613190565b9050919050565b60006131ba8261319d565b9050919050565b6131d26131cd82612218565b6131af565b82525050565b60008160e01b9050919050565b60006131f0826131d8565b9050919050565b61320861320382612b2d565b6131e5565b82525050565b6000819050919050565b6132296132248261245d565b61320e565b82525050565b6000819050919050565b61324a613245826123f8565b61322f565b82525050565b600061325c82876131c1565b60148201915061326c82866131f7565b60048201915061327c8285613218565b60208201915061328c8284613239565b60208201915081905095945050505050565b600081519050919050565b60006132b48261329e565b6132be81856130b4565b93506132ce81856020860161291b565b6132d781612260565b840191505092915050565b600060a0820190506132f76000830188612690565b6133046020830187612a70565b818103604083015261331681866132a9565b90506133256060830185612a70565b6133326080830184612690565b9695505050505050565b60006133478261245d565b91506133528361245d565b925082820390508181111561336a57613369612cce565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60006133ab8285613239565b6020820191506133bb82846131c1565b6014820191508190509392505050565b60006133d68261245d565b91506133e18361245d565b92508282026133ef8161245d565b9150828204841483151761340657613405612cce565b5b5092915050565b600081905092915050565b60006134238261329e565b61342d818561340d565b935061343d81856020860161291b565b80840191505092915050565b60006134558284613418565b915081905092915050565b600061346c828a613239565b60208201915061347c82896131c1565b60148201915061348c82886131f7565b60048201915061349c8287613218565b6020820191506134ac8286613239565b6020820191506134bc8285613239565b6020820191506134cc82846131f7565b6004820191508190509897505050505050505056fea26469706673582212201ca43df43ceb7abf97a07095696eef5d895c36a86588ff3b2fcfda41fd4db47b64736f6c634300081b0033";

type WithdrawalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawalConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Withdrawal__factory extends ContractFactory {
  constructor(...args: WithdrawalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Withdrawal & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Withdrawal__factory {
    return super.connect(runner) as Withdrawal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawalInterface {
    return new Interface(_abi) as WithdrawalInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Withdrawal {
    return new Contract(address, _abi, runner) as unknown as Withdrawal;
  }
}
