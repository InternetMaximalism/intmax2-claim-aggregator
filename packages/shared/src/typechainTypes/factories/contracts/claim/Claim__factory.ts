/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Claim, ClaimInterface } from "../../../contracts/claim/Claim";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "AddressZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
    ],
    name: "BlockHashNotExists",
    type: "error",
  },
  {
    inputs: [],
    name: "ClaimAggregatorMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ClaimChainVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ClaimProofVerificationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDepositAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotFinishedPeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "contribution",
        type: "uint256",
      },
    ],
    name: "ContributionRecorded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "withdrawalHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct WithdrawalLib.Withdrawal",
        name: "withdrawal",
        type: "tuple",
      },
    ],
    name: "DirectWithdrawalQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "getAllocationPerPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_scrollMessenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_claimVerifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liquidity",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rollup",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contribution",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "relayClaims",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "blockNumber",
            type: "uint32",
          },
        ],
        internalType: "struct ChainedClaimLib.ChainedClaim[]",
        name: "claims",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "lastClaimHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimAggregator",
            type: "address",
          },
        ],
        internalType: "struct ClaimProofPublicInputsLib.ClaimProofPublicInputs",
        name: "publicInputs",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "submitClaimProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051611db06100fd60003960008181610df101528181610e1a0152610f600152611db06000f3fe6080604052600436106100a75760003560e01c8063715018a611610064578063715018a61461015e5780638da5cb5b14610173578063ad3cb1cc146101ba578063cc2a9a5b146101f8578063e5e43f2414610218578063f2fde38b1461023857600080fd5b8063086146d2146100ac5780632c36a5d4146100d457806337a38d31146100f65780634f1ef2861461011657806352d1902d146101295780635c6bb0ab1461013e575b600080fd5b3480156100b857600080fd5b506100c1610258565b6040519081526020015b60405180910390f35b3480156100e057600080fd5b506100f46100ef366004611656565b610269565b005b34801561010257600080fd5b506100f461011136600461170e565b61046a565b6100f46101243660046117ea565b610718565b34801561013557600080fd5b506100c1610737565b34801561014a57600080fd5b506100c1610159366004611893565b610754565b34801561016a57600080fd5b506100f4610767565b34801561017f57600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b0390911681526020016100cb565b3480156101c657600080fd5b506101eb604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516100cb91906118fc565b34801561020457600080fd5b506100f461021336600461190f565b61077b565b34801561022457600080fd5b506100c1610233366004611983565b6109e0565b34801561024457600080fd5b506100f46102533660046119af565b6109f5565b60006102646005610a33565b905090565b6102768585858585610a50565b6000805b858110156103c8576000878783818110610296576102966119ca565b905060a002018036038101906102ac91906119e0565b60408082015160009081526008602052205490915060ff16156102cf57506103c0565b60408181015160009081526008602052818120805460ff191660011790556002546080840151925163d2b210a160e01b815263ffffffff909316600484015290916001600160a01b039091169063d2b210a190602401602060405180830381865afa158015610342573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103669190611a68565b90508160600151811461039d578160600151604051630631b89b60e41b815260040161039491815260200190565b60405180910390fd5b815160208301516103b091600591610bc3565b836103ba81611a97565b94505050505b60010161027a565b506004546001600160a01b031663f099f9f57fda5ef0dc178ac91b88a75e00c784aa6cda7295d02eebaec5c697f2b7ca57cdba336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260448101849052606401600060405180830381600087803b15801561044a57600080fd5b505af115801561045e573d6000803e3d6000fd5b50505050505050505050565b826104756005610a33565b1161049357604051635c6f5fd960e01b815260040160405180910390fd5b6000816001600160401b038111156104ad576104ad6117a4565b6040519080825280602002602001820160405280156104ff57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816104cb5790505b50905060005b8151811015610612576000848483818110610522576105226119ca565b905060200201602081019061053791906119af565b9050600061054760058884610c8d565b9050600087428460405160200161057e93929190928352602083019190915260601b6001600160601b031916604082015260540190565b60408051601f1981840301815282825280516020918201206080840183526001600160a01b038716808552600192850192909252918301859052606083018290529092506105cb82610cf2565b7fdbe674c66915823ad8cb90cac7eb482e951adec0311c9cf091da19de527ee935836040516105fa9190611ab0565b60405180910390a35050600190920191506105059050565b5060408051600080825260208201909252639d6a54cb60e01b9061063b90849060448101611aea565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905061067881610d6a565b6004546001600160a01b031663f099f9f57fb5676ab224a46e60d2dabad66cec9aca97207e56cceb702167f49c074d12052c3360405160e084901b6001600160e01b031916815260048101929092526001600160a01b0316602482015260448101869052606401600060405180830381600087803b1580156106f957600080fd5b505af115801561070d573d6000803e3d6000fd5b505050505050505050565b610720610de6565b61072982610e8b565b6107338282610e93565b5050565b6000610741610f55565b50600080516020611d5b83398151915290565b6000610761600583610f9e565b92915050565b61076f610fcf565b610779600061102a565b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156107c05750825b90506000826001600160401b031660011480156107dc5750303b155b9050811580156107ea575080155b156108085760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561083257845460ff60401b1916600160401b1785555b6001600160a01b038b1661085957604051639fabe1c160e01b815260040160405180910390fd5b6001600160a01b038a1661088057604051639fabe1c160e01b815260040160405180910390fd5b6001600160a01b0389166108a757604051639fabe1c160e01b815260040160405180910390fd5b6001600160a01b0388166108ce57604051639fabe1c160e01b815260040160405180910390fd5b6001600160a01b0387166108f557604051639fabe1c160e01b815260040160405180910390fd5b6001600160a01b03861661091c57604051639fabe1c160e01b815260040160405180910390fd5b6109258b61109b565b61092d6110ac565b61093760056110b4565b600180546001600160a01b03199081166001600160a01b038d8116919091179092556000805482168c84161790556002805482168a841617905560048054821689841617905560038054909116918a1691909117905583156109d357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050565b60006109ee600584846110cf565b9392505050565b6109fd610fcf565b6001600160a01b038116610a2757604051631e4fbdf760e01b815260006004820152602401610394565b610a308161102a565b50565b8054600090610e1090610a469042611ba4565b6107619190611bb7565b610ab983600001358686808060200260200160405190810160405280939291908181526020016000905b82821015610aa657610a9760a083028601368190038101906119e0565b81526020019060010190610a7a565b505050505061113290919063ffffffff16565b610ad65760405163ec196f1360e01b815260040160405180910390fd5b33610ae760408501602086016119af565b6001600160a01b031614610b0e576040516343c30a7760e01b815260040160405180910390fd5b6000546001600160a01b0316637e4f7a8a8383610b40610b3b610b36368a90038a018a611bd9565b61118f565b6111c2565b6040518463ffffffff1660e01b8152600401610b5e93929190611c2e565b602060405180830381865afa158015610b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f9190611ca9565b610bbc57604051631f53b29360e01b815260040160405180910390fd5b5050505050565b6000610bce84610a33565b90506000610bdb8361123a565b9050808560010160008481526020019081526020016000206000828254610c029190611ccb565b9091555050600082815260028601602090815260408083206001600160a01b038816845290915281208054839290610c3b908490611ccb565b909155505060408051848152602081018390526001600160a01b0386169184917f8d0cf479602fd3cf00c7e5f661984c44659a827edb5f23cd85094cdc942f4649910160405180910390a35050505050565b6000610c9884610a33565b8310610cb757604051635c6f5fd960e01b815260040160405180910390fd5b6000610cc48585856110cf565b6000948552600295909501602090815260408086206001600160a01b03959095168652939052505081205590565b60008160000151826020015183604001518460600151604051602001610d4d949392919060609490941b6001600160601b031916845260e09290921b6001600160e01b03191660148401526018830152603882015260580190565b604051602081830303815290604052805190602001209050919050565b600154600354604051635f7b157760e01b8152600092600019926001600160a01b0391821692635f7b1577928692610daf929116908390899088903390600401611cde565b6000604051808303818588803b158015610dc857600080fd5b505af1158015610ddc573d6000803e3d6000fd5b5050505050505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610e6d57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e61600080516020611d5b833981519152546001600160a01b031690565b6001600160a01b031614155b156107795760405163703e46dd60e11b815260040160405180910390fd5b610a30610fcf565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610eed575060408051601f3d908101601f19168201909252610eea91810190611a68565b60015b610f1557604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610394565b600080516020611d5b8339815191528114610f4657604051632a87526960e21b815260048101829052602401610394565b610f5083836112b7565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107795760405163703e46dd60e11b815260040160405180910390fd5b600080610fab848461130d565b905062015180610fbd610e1083611d27565b610fc79190611bb7565b949350505050565b336110017f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146107795760405163118cdaa760e01b8152336004820152602401610394565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6110a361139a565b610a30816113e3565b61077961139a565b610e106110c18142611bb7565b6110cb9190611d27565b9055565b600082815260018401602052604081205481036110ee575060006109ee565b60008381526001850160209081526040808320546002880183528184206001600160a01b0387168552909252909120546111288686610f9e565b610fbd9190611d27565b600080805b8451811015611173576000858281518110611154576111546119ca565b6020026020010151905061116881846113eb565b925050600101611137565b50828114611185576000915050610761565b5060019392505050565b600081600001518260200151604051602001610d4d92919091825260601b6001600160601b031916602082015260340190565b604080516008808252610120820190925260609160009190602082016101008036833701905050905060005b600881101561123357611202816020611d27565b84901b60e01c63ffffffff16828281518110611220576112206119ca565b60209081029190910101526001016111ee565b5092915050565b60008167016345785d8a00000361125357506001919050565b81670de0b6b3a76400000361126a57506004919050565b81678ac7230489e800000361128157506009919050565b8168056bc75e2d631000000361129957506010919050565b60405163fe9ba5cd60e01b815260040160405180910390fd5b919050565b6112c082611477565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561130557610f5082826114dc565b610733611552565b600080620151806366b2e1506113238583611d27565b865461132f9190611ccb565b6113399190611ba4565b6113439190611bb7565b90506a076496d888478bcef0000060005b600781101561138e576010811b808410156113755782945050505050610761565b61137f8185611ba4565b935050600191821c9101611354565b50600095945050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661077957604051631afcd79f60e31b815260040160405180910390fd5b6109fd61139a565b600081836000015184602001518560400151866060015187608001516040516020016114599695949392919095865260609490941b6001600160601b031916602086015260348501929092526054840152607483015260e01b6001600160e01b031916609482015260980190565b60405160208183030381529060405280519060200120905092915050565b806001600160a01b03163b6000036114ad57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610394565b600080516020611d5b83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516114f99190611d3e565b600060405180830381855af49150503d8060008114611534576040519150601f19603f3d011682016040523d82523d6000602084013e611539565b606091505b5091509150611549858383611571565b95945050505050565b34156107795760405163b398979f60e01b815260040160405180910390fd5b60608261158657611581826115cd565b6109ee565b815115801561159d57506001600160a01b0384163b155b156115c657604051639996b31560e01b81526001600160a01b0385166004820152602401610394565b50806109ee565b8051156115dd5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b60006040828403121561160857600080fd5b50919050565b60008083601f84011261162057600080fd5b5081356001600160401b0381111561163757600080fd5b60208301915083602082850101111561164f57600080fd5b9250929050565b60008060008060006080868803121561166e57600080fd5b85356001600160401b0381111561168457600080fd5b8601601f8101881361169557600080fd5b80356001600160401b038111156116ab57600080fd5b88602060a0830284010111156116c057600080fd5b6020918201965094506116d690889088016115f6565b925060608601356001600160401b038111156116f157600080fd5b6116fd8882890161160e565b969995985093965092949392505050565b60008060006040848603121561172357600080fd5b8335925060208401356001600160401b0381111561174057600080fd5b8401601f8101861361175157600080fd5b80356001600160401b0381111561176757600080fd5b8660208260051b840101111561177c57600080fd5b939660209190910195509293505050565b80356001600160a01b03811681146112b257600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156117e2576117e26117a4565b604052919050565b600080604083850312156117fd57600080fd5b6118068361178d565b915060208301356001600160401b0381111561182157600080fd5b8301601f8101851361183257600080fd5b80356001600160401b0381111561184b5761184b6117a4565b61185e601f8201601f19166020016117ba565b81815286602083850101111561187357600080fd5b816020840160208301376000602083830101528093505050509250929050565b6000602082840312156118a557600080fd5b5035919050565b60005b838110156118c75781810151838201526020016118af565b50506000910152565b600081518084526118e88160208601602086016118ac565b601f01601f19169290920160200192915050565b6020815260006109ee60208301846118d0565b60008060008060008060c0878903121561192857600080fd5b6119318761178d565b955061193f6020880161178d565b945061194d6040880161178d565b935061195b6060880161178d565b92506119696080880161178d565b915061197760a0880161178d565b90509295509295509295565b6000806040838503121561199657600080fd5b823591506119a66020840161178d565b90509250929050565b6000602082840312156119c157600080fd5b6109ee8261178d565b634e487b7160e01b600052603260045260246000fd5b600060a08284031280156119f357600080fd5b5060405160009060a081016001600160401b0381118282101715611a1957611a196117a4565b604052611a258461178d565b8152602084810135908201526040808501359082015260608085013590820152608084013563ffffffff81168114611a5b578283fd5b6080820152949350505050565b600060208284031215611a7a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600060018201611aa957611aa9611a81565b5060010190565b81516001600160a01b0316815260208083015163ffffffff1690820152604080830151908201526060808301519082015260808101610761565b6040808252835190820181905260009060208501906060840190835b81811015611b5c57611b4683855180516001600160a01b0316825260208082015163ffffffff169083015260408082015190830152606090810151910152565b6020939093019260809290920191600101611b06565b50508381036020808601919091528551808352918101925085019060005b81811015611b98578251845260209384019390920191600101611b7a565b50919695505050505050565b8181038181111561076157610761611a81565b600082611bd457634e487b7160e01b600052601260045260246000fd5b500490565b60006040828403128015611bec57600080fd5b50604080519081016001600160401b0381118282101715611c0f57611c0f6117a4565b60405282358152611c226020840161178d565b60208201529392505050565b60408152826040820152828460608301376000606084830101526000601f19601f8501168201606081016060848303016020850152808551808352608084019150602087019350600092505b80831015611c9d5783518252602082019150602084019350600183019250611c7a565b50979650505050505050565b600060208284031215611cbb57600080fd5b815180151581146109ee57600080fd5b8082018082111561076157610761611a81565b60018060a01b038616815284602082015260a060408201526000611d0560a08301866118d0565b6060830194909452506001600160a01b03919091166080909101529392505050565b808202811582820484141761076157610761611a81565b60008251611d508184602087016118ac565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220c041577745c72be0b8df463d59c048ea6485dcc5db29f82c0a13cdc9df0e2e7e64736f6c634300081b0033";

type ClaimConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClaimConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Claim__factory extends ContractFactory {
  constructor(...args: ClaimConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Claim & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Claim__factory {
    return super.connect(runner) as Claim__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimInterface {
    return new Interface(_abi) as ClaimInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Claim {
    return new Contract(address, _abi, runner) as unknown as Claim;
  }
}
